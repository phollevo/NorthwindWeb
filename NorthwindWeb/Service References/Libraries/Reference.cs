//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NorthwindWeb.Libraries {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Supplier", Namespace="http://schemas.datacontract.org/2004/07/Libraries")]
    [System.SerializableAttribute()]
    public partial class Supplier : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string addressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string contactNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string contactTitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string countryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string faxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string regionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string telField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string villeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string webSiteField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string address {
            get {
                return this.addressField;
            }
            set {
                if ((object.ReferenceEquals(this.addressField, value) != true)) {
                    this.addressField = value;
                    this.RaisePropertyChanged("address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string contactName {
            get {
                return this.contactNameField;
            }
            set {
                if ((object.ReferenceEquals(this.contactNameField, value) != true)) {
                    this.contactNameField = value;
                    this.RaisePropertyChanged("contactName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string contactTitle {
            get {
                return this.contactTitleField;
            }
            set {
                if ((object.ReferenceEquals(this.contactTitleField, value) != true)) {
                    this.contactTitleField = value;
                    this.RaisePropertyChanged("contactTitle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string country {
            get {
                return this.countryField;
            }
            set {
                if ((object.ReferenceEquals(this.countryField, value) != true)) {
                    this.countryField = value;
                    this.RaisePropertyChanged("country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string fax {
            get {
                return this.faxField;
            }
            set {
                if ((object.ReferenceEquals(this.faxField, value) != true)) {
                    this.faxField = value;
                    this.RaisePropertyChanged("fax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string region {
            get {
                return this.regionField;
            }
            set {
                if ((object.ReferenceEquals(this.regionField, value) != true)) {
                    this.regionField = value;
                    this.RaisePropertyChanged("region");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string tel {
            get {
                return this.telField;
            }
            set {
                if ((object.ReferenceEquals(this.telField, value) != true)) {
                    this.telField = value;
                    this.RaisePropertyChanged("tel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ville {
            get {
                return this.villeField;
            }
            set {
                if ((object.ReferenceEquals(this.villeField, value) != true)) {
                    this.villeField = value;
                    this.RaisePropertyChanged("ville");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string webSite {
            get {
                return this.webSiteField;
            }
            set {
                if ((object.ReferenceEquals(this.webSiteField, value) != true)) {
                    this.webSiteField = value;
                    this.RaisePropertyChanged("webSite");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Libraries.ISupplier")]
    public interface ISupplier {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplier/addSupplier", ReplyAction="http://tempuri.org/ISupplier/addSupplierResponse")]
        bool addSupplier(NorthwindWeb.Libraries.Supplier supplier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplier/addSupplier", ReplyAction="http://tempuri.org/ISupplier/addSupplierResponse")]
        System.Threading.Tasks.Task<bool> addSupplierAsync(NorthwindWeb.Libraries.Supplier supplier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplier/getSupplier", ReplyAction="http://tempuri.org/ISupplier/getSupplierResponse")]
        NorthwindWeb.Libraries.Supplier getSupplier(long Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplier/getSupplier", ReplyAction="http://tempuri.org/ISupplier/getSupplierResponse")]
        System.Threading.Tasks.Task<NorthwindWeb.Libraries.Supplier> getSupplierAsync(long Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplier/searchSuppliers", ReplyAction="http://tempuri.org/ISupplier/searchSuppliersResponse")]
        NorthwindWeb.Libraries.Supplier[] searchSuppliers(string pattern);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplier/searchSuppliers", ReplyAction="http://tempuri.org/ISupplier/searchSuppliersResponse")]
        System.Threading.Tasks.Task<NorthwindWeb.Libraries.Supplier[]> searchSuppliersAsync(string pattern);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplier/seeDetails", ReplyAction="http://tempuri.org/ISupplier/seeDetailsResponse")]
        NorthwindWeb.Libraries.Supplier seeDetails(long Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplier/seeDetails", ReplyAction="http://tempuri.org/ISupplier/seeDetailsResponse")]
        System.Threading.Tasks.Task<NorthwindWeb.Libraries.Supplier> seeDetailsAsync(long Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplier/modify", ReplyAction="http://tempuri.org/ISupplier/modifyResponse")]
        bool modify(NorthwindWeb.Libraries.Supplier supplier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplier/modify", ReplyAction="http://tempuri.org/ISupplier/modifyResponse")]
        System.Threading.Tasks.Task<bool> modifyAsync(NorthwindWeb.Libraries.Supplier supplier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplier/delete", ReplyAction="http://tempuri.org/ISupplier/deleteResponse")]
        bool delete(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplier/delete", ReplyAction="http://tempuri.org/ISupplier/deleteResponse")]
        System.Threading.Tasks.Task<bool> deleteAsync(long id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISupplierChannel : NorthwindWeb.Libraries.ISupplier, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SupplierClient : System.ServiceModel.ClientBase<NorthwindWeb.Libraries.ISupplier>, NorthwindWeb.Libraries.ISupplier {
        
        public SupplierClient() {
        }
        
        public SupplierClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SupplierClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SupplierClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SupplierClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool addSupplier(NorthwindWeb.Libraries.Supplier supplier) {
            return base.Channel.addSupplier(supplier);
        }
        
        public System.Threading.Tasks.Task<bool> addSupplierAsync(NorthwindWeb.Libraries.Supplier supplier) {
            return base.Channel.addSupplierAsync(supplier);
        }
        
        public NorthwindWeb.Libraries.Supplier getSupplier(long Id) {
            return base.Channel.getSupplier(Id);
        }
        
        public System.Threading.Tasks.Task<NorthwindWeb.Libraries.Supplier> getSupplierAsync(long Id) {
            return base.Channel.getSupplierAsync(Id);
        }
        
        public NorthwindWeb.Libraries.Supplier[] searchSuppliers(string pattern) {
            return base.Channel.searchSuppliers(pattern);
        }
        
        public System.Threading.Tasks.Task<NorthwindWeb.Libraries.Supplier[]> searchSuppliersAsync(string pattern) {
            return base.Channel.searchSuppliersAsync(pattern);
        }
        
        public NorthwindWeb.Libraries.Supplier seeDetails(long Id) {
            return base.Channel.seeDetails(Id);
        }
        
        public System.Threading.Tasks.Task<NorthwindWeb.Libraries.Supplier> seeDetailsAsync(long Id) {
            return base.Channel.seeDetailsAsync(Id);
        }
        
        public bool modify(NorthwindWeb.Libraries.Supplier supplier) {
            return base.Channel.modify(supplier);
        }
        
        public System.Threading.Tasks.Task<bool> modifyAsync(NorthwindWeb.Libraries.Supplier supplier) {
            return base.Channel.modifyAsync(supplier);
        }
        
        public bool delete(long id) {
            return base.Channel.delete(id);
        }
        
        public System.Threading.Tasks.Task<bool> deleteAsync(long id) {
            return base.Channel.deleteAsync(id);
        }
    }
}
